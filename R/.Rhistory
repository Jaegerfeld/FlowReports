library(readr)
library(dplyr)
library(ggplot2)
library(ggrepel)
args = commandArgs(trailingOnly=TRUE)
teamname = "Program"
if (length(args)==0) {
startDate <- Sys.Date()-365
} else if (length(args)==1) {
startDate <- Sys.Date() - args[1]
}
#setwd(dir)
WD <- getwd()
print(args)
library(readr)
filepath_Import <- gsub(" ", "", paste("CSV/",teamname,"_IssueTimes.csv"))
Features_DT <- read_csv(filepath_Import,
col_types = cols(
`Created Date` = col_datetime(format = "%d.%m.%Y %H:%M:%S"),
`First Date` = col_datetime(format = "%d.%m.%Y %H:%M:%S"),
`Closed Date` = col_datetime(format = "%d.%m.%Y %H:%M:%S"),
.default = col_character()
)
)
args = commandArgs(trailingOnly=TRUE)
teamname = "Program"
if (length(args)==0) {
startDate <- Sys.Date()-365
} else if (length(args)==1) {
startDate <- Sys.Date() - args[1]
}
WD <- getwd()
setwd("~/GitHub/FlowReports/R")
args = commandArgs(trailingOnly=TRUE)
teamname = "Program"
if (length(args)==0) {
startDate <- Sys.Date()-365
} else if (length(args)==1) {
startDate <- Sys.Date() - args[1]
}
#setwd(dir)
WD <- getwd()
print(args)
source("RScripts/Default_Program/Import_CSV.R")
library(readr)
filepath_Import <- gsub(" ", "", paste("CSV/",teamname,"_IssueTimes.csv"))
Features_DT <- read_csv(filepath_Import,
col_types = cols(
`Created Date` = col_datetime(format = "%d.%m.%Y %H:%M:%S"),
`First Date` = col_datetime(format = "%d.%m.%Y %H:%M:%S"),
`Closed Date` = col_datetime(format = "%d.%m.%Y %H:%M:%S"),
.default = col_character()
)
)
filepath_ImportCFD <- gsub(" ", "", paste("CSV/",teamname,"_CFD.csv"))
FeaturesCFD_DT <- read_csv(filepath_ImportCFD,
col_types = cols(
`Day` = col_date(format = "%d.%m.%Y"),
.default = col_character()
)
)
#Sicherung Features_DT
Features_ALL_DT <- Features_DT
library(readr)
library(dplyr)
library(ggplot2)
library(ggrepel)
args = commandArgs(trailingOnly=TRUE)
teamname = "Program"
if (length(args)==0) {
startDate <- Sys.Date()-365
} else if (length(args)==1) {
startDate <- Sys.Date() - args[1]
}
#setwd(dir)
WD <- getwd()
print(args)
source("RScripts/Default_Program/Import_CSV.R")
source("RScripts/Program/cleanup.R")
View(Features_ALL_DT)
calcDT <- Features_DT
calc2 <- calcDT
source("RScripts/Program/Feature_Calculations.R")
View(Features_ALL_DT)
source("RScripts/Program/Feature_Calculations.R")
source("RScripts/Program/Feature_Calculations.R")
source("RScripts/Program/Detail_Calculations.R")
source("RScripts/Default_Program/scattertable.R")
source("RScripts/Default_Program/Plottings.R")
calcDTAging <- Features_ALL_DT
source("RScripts/Default_Program/AgingWorkCalculations.R")
##import
library(tidyverse)
Enddate <- max(FeaturesCFD_DT$Day)
SD <- min(FeaturesCFD_DT$Day)
#startDate <- Enddate - 365
#startDate <- Enddate - 365
#Art erst 1.10.22 begonnen
startDate <- "2022-10-01"
lastDate <- Enddate
#laufende summe bilden
calcCFD_DT <- FeaturesCFD_DT
View(calcDT)
source("RScripts/Default_Program/CFD_Build.R")
##import
library(tidyverse)
Enddate <- max(FeaturesCFD_DT$Day)
SD <- min(FeaturesCFD_DT$Day)
#startDate <- Enddate - 365
#startDate <- Enddate - 365
#Art erst 1.10.22 begonnen
startDate <- "2022-10-01"
lastDate <- Enddate
#laufende summe bilden
calcCFD_DT <- FeaturesCFD_DT
calcCFD_DT <- calcCFD_DT %>% filter( calcCFD_DT$Day >= startDate)
calcCFD_DT$X11 <- NULL
calcCFD_DT$...10 <- NULL
calcCFD_DT$Funnel <- c(0, cumsum(calcCFD_DT$Funnel)[-nrow(calcCFD_DT)])
calcCFD_DT$Analysis <- c(0, cumsum(calcCFD_DT$Analysis)[-nrow(calcCFD_DT)])
calcCFD_DT$Backlog <- c(0, cumsum(calcCFD_DT$Backlog)[-nrow(calcCFD_DT)])
calcCFD_DT$`In Progress` <- c(0, cumsum(calcCFD_DT$`In Progress`)[-nrow(calcCFD_DT)])
calcCFD_DT$Released<- c(0, cumsum(calcCFD_DT$Released)[-nrow(calcCFD_DT)])
calcCFD_DT$Done <- c(0, cumsum(calcCFD_DT$Done)[-nrow(calcCFD_DT)])
calcCFD_DT$Pending <- c(0, cumsum(calcCFD_DT$Pending)[-nrow(calcCFD_DT)])
##### plotting
library(reshape2)
df <- calcCFD_DT
df <- melt(df, id.vars='Day')
# alle Status zu beginn der Auswertung zusammen
dffirstStartAll = filter(df,(Day == startDate)
& (df$variable == "Analysis"
| df$variable == "Backlog"
| df$variable == "In Progress"
| df$variable == "Pending"
| df$variable == "Released"
| df$variable == "Done"
)
)
# anzahl tickets in ersterm Status
dffirstStart = filter(df,(Day == startDate) & (df$variable == "Analysis"))
#dffirstStart$value <- sum(dffirstStartAll$value)
# alle
dflastStartAll = filter(df,(Day == startDate)
& (df$variable == "Analysis"
| df$variable == "Backlog"
| df$variable == "In Progress"
| df$variable == "Pending"
| df$variable == "Released"
| df$variable == "Done"
)
)
dflastStart = filter(df,(Day == lastDate) & ( df$variable == "Analysis"))
dflastStart$value <- sum(dflastStartAll$value)
dflastStart = filter(df,(Day == lastDate) & ( df$variable == "Analysis"))
View(dflastStart)
View(dflastStartAll)
dflastStart = filter(df,(Day == lastDate) & ( df$variable == "Analysis"))
dflastStart$value <- sum(dflastStartAll$value)
##import
library(tidyverse)
Enddate <- max(FeaturesCFD_DT$Day)
SD <- min(FeaturesCFD_DT$Day)
startDate <- Enddate - 365
lastDate <- Enddate
#laufende summe bilden
calcCFD_DT <- FeaturesCFD_DT
calcCFD_DT <- calcCFD_DT %>% filter( calcCFD_DT$Day >= startDate)
calcCFD_DT$Closed <- NULL
calcCFD_DT$X11 <- NULL
calcCFD_DT$...9 <- NULL
calcCFD_DT$...10 <- NULL
calcCFD_DT$...11 <- NULL
calcCFD_DT$...12 <- NULL
##import
library(tidyverse)
Enddate <- max(FeaturesCFD_DT$Day)
SD <- min(FeaturesCFD_DT$Day)
startDate <- Enddate - 365
lastDate <- Enddate
#laufende summe bilden
calcCFD_DT <- FeaturesCFD_DT
calcCFD_DT <- calcCFD_DT %>% filter( calcCFD_DT$Day >= startDate)
calcCFD_DT$Closed <- NULL
calcCFD_DT$X11 <- NULL
calcCFD_DT$...9 <- NULL
calcCFD_DT$...10 <- NULL
calcCFD_DT$...11 <- NULL
calcCFD_DT$...12 <- NULL
##import
library(tidyverse)
Enddate <- max(FeaturesCFD_DT$Day)
SD <- min(FeaturesCFD_DT$Day)
startDate <- Enddate - 365
lastDate <- Enddate
#laufende summe bilden
calcCFD_DT <- FeaturesCFD_DT
calcCFD_DT <- calcCFD_DT %>% filter( calcCFD_DT$Day >= startDate)
calcCFD_DT$Closed <- NULL
calcCFD_DT$X11 <- NULL
calcCFD_DT$...9 <- NULL
calcCFD_DT$...10 <- NULL
calcCFD_DT$...11 <- NULL
calcCFD_DT$...12 <- NULL
calcCFD_DT$Funnel <- c(0, cumsum(calcCFD_DT$Funnel)[-nrow(calcCFD_DT)])
calcCFD_DT$Analysis <- c(0, cumsum(calcCFD_DT$Analysis)[-nrow(calcCFD_DT)])
calcCFD_DT$Backlog <- c(0, cumsum(calcCFD_DT$Backlog)[-nrow(calcCFD_DT)])
calcCFD_DT$`In Progress` <- c(0, cumsum(calcCFD_DT$`In Progress`)[-nrow(calcCFD_DT)])
calcCFD_DT$Pending <- c(0, cumsum(calcCFD_DT$Pending)[-nrow(calcCFD_DT)])
calcCFD_DT$Released <- c(0, cumsum(calcCFD_DT$Released)[-nrow(calcCFD_DT)])
calcCFD_DT$Done <- c(0, cumsum(calcCFD_DT$Done)[-nrow(calcCFD_DT)])
##### plotting
library(reshape2)
df <- calcCFD_DT
df <- melt(df, id.vars='Day')
dffirstStartAll = filter(df,(Day == startDate)
& ( df$variable == "Analysis"
| df$variable == "Backlog"
| df$variable == "In Progress"
| df$variable == "Pending"
| df$variable == "Released"
| df$variable == "Done"
)
)
dffirstStartAll$value <- as.numeric(dffirstStartAll$value)
dffirstStart = filter(df,(Day == startDate) & (df$variable == "Analysis"))
dffirstStart$value <- as.numeric(dffirstStart$value)
dffirstStart$value <- sum(dffirstStartAll$value)
dflastStartAll = filter(df,(Day == startDate)
& ( df$variable == "Analysis"
| df$variable == "Backlog"
| df$variable == "In Progress"
| df$variable == "Pending"
| df$variable == "Released"
| df$variable == "Done"
)
)
##import
library(tidyverse)
Enddate <- max(FeaturesCFD_DT$Day)
SD <- min(FeaturesCFD_DT$Day)
startDate <- Enddate - 365
lastDate <- Enddate
#laufende summe bilden
calcCFD_DT <- FeaturesCFD_DT
calcCFD_DT <- calcCFD_DT %>% filter( calcCFD_DT$Day >= startDate)
calcCFD_DT$Closed <- NULL
calcCFD_DT$X11 <- NULL
calcCFD_DT$...9 <- NULL
calcCFD_DT$...10 <- NULL
calcCFD_DT$...11 <- NULL
calcCFD_DT$...12 <- NULL
calcCFD_DT$Funnel <- c(0, cumsum(calcCFD_DT$Funnel)[-nrow(calcCFD_DT)])
calcCFD_DT$Analysis <- c(0, cumsum(calcCFD_DT$Analysis)[-nrow(calcCFD_DT)])
calcCFD_DT$Backlog <- c(0, cumsum(calcCFD_DT$Backlog)[-nrow(calcCFD_DT)])
calcCFD_DT$`In Progress` <- c(0, cumsum(calcCFD_DT$`In Progress`)[-nrow(calcCFD_DT)])
calcCFD_DT$Pending <- c(0, cumsum(calcCFD_DT$Pending)[-nrow(calcCFD_DT)])
calcCFD_DT$Released <- c(0, cumsum(calcCFD_DT$Released)[-nrow(calcCFD_DT)])
calcCFD_DT$Done <- c(0, cumsum(calcCFD_DT$Done)[-nrow(calcCFD_DT)])
##### plotting
library(reshape2)
df <- calcCFD_DT
df <- melt(df, id.vars='Day')
dffirstStartAll = filter(df,(Day == startDate)
& ( df$variable == "Analysis"
| df$variable == "Backlog"
| df$variable == "In Progress"
| df$variable == "Pending"
| df$variable == "Released"
| df$variable == "Done"
)
)
dffirstStartAll$value <- as.numeric(dffirstStartAll$value)
dffirstStart = filter(df,(Day == startDate) & (df$variable == "Analysis"))
dffirstStart$value <- as.numeric(dffirstStart$value)
dffirstStart$value <- sum(dffirstStartAll$value)
dflastStartAll = filter(df,(Day == lastDate)
& ( df$variable == "Analysis"
| df$variable == "Backlog"
| df$variable == "In Progress"
| df$variable == "Pending"
| df$variable == "Released"
| df$variable == "Done"
)
)
dflastStart = filter(df,(Day == lastDate) & ( df$variable == "Analysis"))
dflastStartAll$value <- as.numeric(dflastStartAll$value)
dflastStart$value <- sum(dflastStartAll$value)
dfStart <- rbind(dffirstStart,dflastStart)
dffirstEndAll = filter(df,(Day == startDate) & ( df$variable == "Done"
| df$variable == "Released"
)
)
dffirstEndAll$value <- as.numeric(dffirstEndAll$value)
dffirstEnd = filter(df,(Day == startDate) & (df$variable == "Released"))
dffirstEnd$value <- as.numeric(dffirstEnd$value)
dffirstEnd$value <- sum(dffirstEndAll$value)
dflastEndAll = filter(df,(Day == lastDate) & ( df$variable == "Done"
| df$variable == "Released"
)
)
dflastEndAll$value <- as.numeric(dflastEndAll$value)
dflastEnd = filter(df,(Day == lastDate) & (df$variable == "Released"))
dflastEnd$value <- as.numeric(dflastEnd$value)
dflastEnd$value <- sum(dflastEndAll$value)
dfEnd <- rbind(dffirstEnd,dflastEnd)
ratio = dflastStart$value / dflastEnd$value
title = paste("Ratio In/out ", round(ratio,2) , " : 1")
cfdPlot <- ggplot(df, aes(x = Day, y = value)) +
geom_area(aes(fill = variable)) +
geom_line(data=dfStart, aes(x=Day, y=value, group=1)) +
geom_line(data=dfEnd, aes(x=Day, y=value, group=1)) +
labs(title = title,
x = "Date",
y = "Count")
plot(cfdPlot)
source("RScripts/Default_Skyway/Export.R")
source("RScripts/Default_Program/Export.R")
source("RScripts/Default_Program/Export.R")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
